$.Class("infa.Eic.extensionContainer",{
    
        eicObjectId : "", 
        panels : [],
        objectInfo : {},
        
        handleContainerButtons : function(){
            var panels = infa.Eic.extensionContainer.panels,
                backButton = $("li.backButton"),
                searchBox = $("li.searchBox");
                panels.length > 1 ? backButton.removeClass("hideButton") : backButton.addClass("hideButton");
                panels.length > 1 ? searchBox.addClass("partialSearchBoxSize") : searchBox.removeClass("partialSearchBoxSize"); 
        },
    
        getPanel : function(obj){
    
                    var panels = infa.Eic.extensionContainer.panels,
                        activePanelNumber = panels.length;
                    
                    if(panels.length > 0){
                    activePanel = panels[activePanelNumber-1];
                    activePanel.hide();
                }
                
                    var newPanelId = "panel" + "_" + (panels.length + 1),
                        newPanel = new infa.extension.panel(newPanelId, $(".containerContent"), obj.panelName);
                    
                    panels.push(newPanel);  
    
                    infa.Eic.extensionContainer.handleContainerButtons();
    
                    return newPanel;
                },
                
        showTopmostPanel : function(){
            var panels = infa.Eic.extensionContainer.panels;
            var removablePanel = panels.pop();

            if(removablePanel.panelName == infa.Eic.utils.SEARCH_RESULT_PANEL )
            {
               $(".eicSearchField").val("");   
               while(panels.length != 1){
                panels.pop().delete();
               }
            }
            removablePanel.delete();
            panels[panels.length - 1].show();    
            
            infa.Eic.extensionContainer.handleContainerButtons();
        },
    
        removePanels : function(){
            var panels = infa.Eic.extensionContainer.panels;
            panels.forEach(function(panel) {
                panel.delete();
            });
            infa.Eic.extensionContainer.panels = [];
        },
    
        initialize : function(object,showSearch){
            infa.Eic.extensionContainer.reset();
            var deferred = $.Deferred();
            if(showSearch){
                infa.eic.crextension.configuration.initializeEICConfiguration().then(function(){
                    var parameters = {
                        "user": infa.extension.eicConfiguration.getParameter("user"),
                        "password": infa.extension.eicConfiguration.getParameter("password"),
                        "namespace": infa.extension.eicConfiguration.getParameter("namespace")
                    }
                    infa.Eic.session.doLogin(parameters).done(function() { 
                        infa.Eic.session.checkSessionValidation().done(function(isActive){
                            if(!isActive){
                                if(!infa.extension.eicConfiguration.getParameter("user")){
                                    infa.Eic.extensionContainer.createUI();
                                    infa.Eic.extensionContainer.createConfigurationPage();
                                    deferred.resolve(); 
                                    return;
                                }
                            }else{
                                
                                infa.Eic.extensionContainer.createUI();
                                infa.Eic.extensionContainer.createSearchHome();
                                deferred.resolve(); 
                                return;
                            }
                        });
                    });
                })
               
            }else{
               // object = object[parameters.tableauObject] || object;
                infa.Eic.extensionContainer.eicObjectId = object.items[0].id;

                $.blockGetJson("/extension.eic.360.fetch?id="+ RISON.urlencode(infa.Eic.extensionContainer.eicObjectId))
                        .done(function(objectData){
                            infa.Eic.extensionContainer.objectInfo = objectData;
                            infa.Eic.extensionContainer.createUI(objectData);
                            deferred.resolve();
                        })
                
            }
            return deferred.promise(); 
            
        },
        renderHeaderTemplate : function(){
            var self = this;
            var extensionHeader = $(".extensionHeader"),
                ul = $("<ul>").appendTo(extensionHeader);
    
                // $("<li><a href='#'><img src= '"+ chrome.extension.getURL("res/images/back.jpg") +"'></a></li>").addClass("backButton hideButton clickableHeaderButton").appendTo(ul);
                $("<li><img src="+ chrome.extension.getURL("res/images/header.png") + "><span data-id='ProdName' class='product-title'>Enterprise Data Catalog</span></li>").addClass("EIClogo").appendTo(ul);
                $("<li title='Close'><a href='#'><img class='svg close-button' src= '"+ chrome.extension.getURL("res/images/close.svg") +"'></a></li>").addClass("closeButton clickableHeaderButton").appendTo(ul);
                $("<li title='Configuration'><a href='#'><img class='svg config-button' src= '"+ chrome.extension.getURL("res/images/settings.svg") +"'></a></li>").addClass("configButton clickableHeaderButton").appendTo(ul);

            var seachToolbar = $(".searchToolbar");

                ul = $("<ul>").appendTo(seachToolbar);
                $("<li><a href='#'><img src= '"+ chrome.extension.getURL("res/images/small_go.svg") +"'></a></li>").addClass("backButton hideButton clickableHeaderButton").appendTo(ul);
                
                var searchLi =  $("<li>").addClass("searchBox").appendTo(ul);
                var searchDiv = $("<div/>").addClass("eicSearchBox").appendTo(searchLi);
                $('<div class="eicSearchActivationButton"><a href="#"><img class="svg" src= "'+ chrome.extension.getURL("res/images/search.svg") +'"></a></div>').appendTo(searchDiv);
                var _input = $('<input type="text" class="eicSearchField ui-autocomplete-input" placeholder="Search" autocomplete="off">').appendTo(searchDiv);
    
                _input.typeahead(null, {
                    name: 'eicSearchField',
                    display: 'label',
                    source: self.suggest()
                }).bind('typeahead:select',function(evt,s){
                    extensionHeader.trigger("search",s.label);
                });
                $.renderSVG();
            
        }, 
     
          
        suggest: function(){
            return new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                
                  wildcard: '%QUERY',
                  transport: $.suggestAjax,
                  url: $.url('/web.eic.search.suggest?q=%QUERY'),
                  filter: function (list) {
                    return $.map(list.suggestions, function (i) {
                        return {
                            label:i,
                            name:i
                        };
                    });
                }
                }
              });
           
        }, 
        renderFooterTemplate : function(){
            var extensionHeader = $(".extensionFooter"),
            nav = $('<nav id="navbar-example2" class="navbar navbar-light bg-faded">').appendTo(extensionHeader),
            ul = $("<ul class='quick-links nav nav-pills pull-right'>").appendTo(nav);
    
            $("<li class='quick-link nav-item' title='Description'><a class='nav-link' href='#description'><img src= '"+ chrome.extension.getURL("res/images/description.png") +"'></a>").appendTo(ul);
            $("<li class='quick-link nav-item' title='Relationships'><a class='nav-link' href='#relationships'><img src= '"+ chrome.extension.getURL("res/images/relation.png") +"'></a>").appendTo(ul);
            infa.Eic.extensionContainer.bindEvents();
        },   
        getTemplate : function(){
            var template = $("<div class='loginDiv'></div><nav class='navbar extensionHeader navbar-fixed-top'></nav>" +
                            "<nav class='navbar searchToolbar navbar-fixed-top'></nav>"+
                            "<div class='bgHome'></div>" +
                     "<div class ='container containerContent'></div>").appendTo($("body").removeClass("login-page").addClass("ext-body"));
            
            infa.Eic.extensionContainer.renderHeaderTemplate();   
            // infa.Eic.extensionContainer.renderFooterTemplate();
            infa.Eic.extensionContainer.bindEvents();

            return template;
        },
        createUI : function(objectInfo){
            this.clearUI();
            var template = infa.Eic.extensionContainer.getTemplate();
            if(objectInfo && objectInfo.items && objectInfo.items.length) {
                var ldmObject = new infaw.extension.EICObject(objectInfo.items[0].id, objectInfo.items[0]);
                ldmObject.open();
            }else if(objectInfo && objectInfo.items && objectInfo.items.length == 0){
                //objectInfo exists but there is no data ,means there is nopermission
                infa.Eic.utils.getNoPermissionTemplate($(".containerContent"));
            }
               
        },
        clearUI:function(){
            $(".loginDiv,.containerContent,.bgHome").remove();
        },
        toggleContainerContent:function(showContainer){
            var loginDiv = $(".loginDiv"),
                containerContent = $(".containerContent");
            
            if(loginDiv.is(":visible") || showContainer){
                loginDiv.hide();
                containerContent.show();
                containerContent.parents('body').removeClass("login-page")
            }else{
                loginDiv.show();
                containerContent.hide();
                containerContent.parents('body').addClass("login-page")
            }
        },
        createConfigurationPage :function(){
            infa.Eic.extensionContainer.toggleContainerContent(false);
            new  infa.eic.crextension.configuration({
                renderTo : $(".loginDiv")
            })
        },
        createSearchHome:function(){
            infa.Eic.extensionContainer.toggleContainerContent(true);
            var searchHome =  new infa.eic.crextension.searchHome({
                renderTo : infa.Eic.extensionContainer.getPanel({panelName : infa.Eic.utils.SEARCH_HOME_PANEL }).getElement()
            }); 
            searchHome.onTrendClicked = function(term){
                $(".extensionHeader").trigger("search",term);
            }
        },
        bindEvents : function(){
            var self = this,
            extensionHeader = $(".extensionHeader"),
            searchToolbar = $(".searchToolbar"),
            containerContent = $(".containerContent"),
            createSearchResults = function(term){          
                extensionHeader.find(".eicSearchField").typeahead('close');
                containerContent.find(".no-permission").remove();
                infa.eic.crextension.searchListView.MAX_LIST_ITEMS = 9;
                new infa.eic.crextension.searchListView({
                            renderTo : infa.Eic.extensionContainer.getPanel({panelName : infa.Eic.utils.SEARCH_RESULT_PANEL }).getElement(),
                            term:term}); 
            }
    
            searchToolbar.on('click','.backButton', function(event){
                infa.Eic.extensionContainer.showTopmostPanel();
                event.preventDefault();
            })
    
    
            searchToolbar.on('keydown', 'input', function (e) {
                    var key = e.which;
                    if(key == 13) {
                        var term = $(this).val();
                        createSearchResults(term);
                        return false;
                    }
                });
            extensionHeader.on('search',function(evt,term){
                if($.trim(term)!=""){
                    $(".searchToolbar ").find("input.eicSearchField").eq(1).val(term);
                    createSearchResults(term);
                }
            });
            searchToolbar.on('click','.eicSearchActivationButton', function(event,s){
                $(this).parents('.extensionHeader').toggleClass("searchActive");
                var term = $(this).parent().find("input.eicSearchField").eq(1).val();
                if($.trim(term)!=""){
                    createSearchResults(term);
                }
                event.preventDefault();  
            })
    
            extensionHeader.on('click','.closeButton', function(event){
                window.parent.postMessage("closeEICExtensionWindow","*");
            })
            extensionHeader.on('click','.configButton', function(event){
                infa.Eic.extensionContainer.createConfigurationPage();
            })
            
            containerContent.on('click','.eic-link', function(event){
                var objectInfo = $(this).data("objectInfo"),
                    objectId = $(this).data("id"),
                    view = $(this).data("view"),
                    type = $(this).data("type"),
                    ldmObject;
    
                if(objectInfo){
                    var id = objectInfo.id,
                        type = objectInfo.type;
                    
                        if(infa.Eic.utils.isOpenableClassType(type)){
                            ldmObject = new infaw.extension.EICObject(id);   
                            ldmObject.open();
                        }else{
                            infa.Eic.utils.openEicLink(id, view, type);
                        }
                }else 
                if(objectId){
                        infa.Eic.utils.openEicLink(objectId, view, type); 
                }
                 event.preventDefault();
            })
            
        },
    
        reset : function(){
            infa.Eic.extensionContainer.eicObjectId = ""; 
            infa.Eic.extensionContainer.panels = [];
            infa.Eic.extensionContainer.objectInfo = {};
            $(".extensionHeader").remove();
            $(".searchToolbar").remove();
            $(".containerContent").remove();
            $(".extensionFooter").remove();
        }
    },{})