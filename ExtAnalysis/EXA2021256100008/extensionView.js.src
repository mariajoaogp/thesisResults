$.Class("infa.Eic.extensionView",{

    getTemplate : function(){
		     var htmlId = "extensionContainer",
                extenId = "extension" + htmlId;
		 
        var template = $("<div class='extensionSlidingWindow'>" +
                                "<div class='loginDiv' id='loginDiv' style='display:none'></div>" +
                                "<div class='extensionContainer' id='" + extenId + "'>" +
                                "<iframe id='extensionIframe' width = '420' frameBorder='0' src=" + chrome.runtime.getURL('index.html') +" scrolling='no'></iframe>" +
                                "</div>" +
                                "<div class='slideActionIcon'>" +
                                "<img class='left' src='" + chrome.extension.getURL("res/images/favicon.ico") + "' />" +
                                // "<img class='right' src='" + chrome.extension.getURL("res/images/favicon.ico") + "' />" +
                                "</div>" +
                                "</div>");        
                        return template;
	},
    createContainerUI : function(template){
                            var self = this,
                                leftIcon = template.find(".slideActionIcon .left");
                            
                            leftIcon.on("click", function() {
                                $(".loginDiv").hide();
                                self.showExtensionView(template);
                            });
                            template.appendTo($("body"));
                        },

	reset : function(){
				$(".extensionSlidingWindow").remove();
            },
    
    showExtensionView : function(template){ 
            var leftIcon = template.find(".slideActionIcon .left"),
                rightIcon = template.find(".slideActionIcon .right"),
                slideActionIcon = template.find(".slideActionIcon");
            var iframeWin = document.getElementById("extensionIframe").contentWindow;
                function createIframe(){
                        setTimeout(function(){
							/*
							EBF-17962
							Date-5 June 2020
							*/
                            if(!iframeWin){
                                iframeWin = document.getElementById("extensionIframe").contentWindow;
                            }
                            iframeWin && iframeWin.postMessage("updateEICIframeContent","*");
                        },500);
                }
                createIframe();
                leftIcon.hide();
                slideActionIcon.hide();
                template.addClass('slideLeft');
            /*infa.Eic.session.checkSessionValidation().done(function(isActive){
                    if(!isActive){
                        if(!infa.extension.eicConfiguration.getParameter("user")){
                            // if(true){                    
                            loadLoginPage = function(){
                                var deferred = $.Deferred();
                                var loadedTemplate = $.loadTemplate(chrome.extension.getURL("res/tmpl/login.htm"));
                                loadedTemplate.then(function(template){
                                    executableTemplate = $.tmpl(template,{loginImageUrl : chrome.extension.getURL("res/images/favicon.ico")});
                                    $("#loginDiv").append(executableTemplate); 
                                    deferred.resolve();                       
                                })
                                return deferred.promise();
                            }
            
                            loadLoginPage().done(function(){
                                var loginDiv = $(".extensionSlidingWindow").find("#loginDiv"),
                                    extensionContainer = $(".extensionSlidingWindow").find(".extensionContainer");
                                    
                                    loginDiv.show();
                                    extensionContainer.hide();
            
                                loginDiv.find('.loginBtn').on("click", function(){
                                    var form = $(this).parents('.form');                      
                                    var user = form.find("#user input").val(),
                                        password = form.find("#password input").val(),
                                        namespace = form.find("#namespace option:selected"),
                                        parameters = {
                                                        "user" : user,
                                                        "password" : password,
                                                        "namespace" : namespace
                                                    }
            
                                   if($(".rememberCredentials").is(':checked'))
                                   {                        
                                        chrome.extension.sendMessage({
                                            action:"cacheEICConfiguration",
                                            user: user,
                                            password: password,
                                            namespace: namespace
                                        });
                                        infa.Eic.extensionView.initializeEICConfiguration(parameters);
                                    }
            
                                   infa.Eic.session.doLogin(parameters).done(function(responseText) {
                                    var errorDiv = loginDiv.find(".infaTileContent .error");
                                        errorDiv.hide();
                                    
                                    if(responseText.error){
                                        errorDiv.text(responseText.error).show(); 
                                        return;
                                    }   
                                        createIframe();                                    
                                        loginDiv.hide();
                                        extensionContainer.show();
                                    })
                                })
                            })                
                        }
                        else
                        {
                            var parameters = {
                                "user": infa.extension.eicConfiguration.getParameter("user"),
                                "password": infa.extension.eicConfiguration.getParameter("password"),
                                "namespace": infa.extension.eicConfiguration.getParameter("namespace")
                            }
            
                        infa.Eic.session.doLogin(parameters).done(function() {
                            createIframe();
                            leftIcon.hide();e
                        })
                        }
                    }
                    else
                    {
                        createIframe();
                    }

                   
            }).fail(function(){
                
            })*/

        },

        initialize: function(tableauObject) {
        
                infa.Eic.utils.getPermission(tableauObject).done(function(objectPresent) {
                    if(objectPresent == true || tableauObject && tableauObject.show){ 
                        infa.Eic.extensionView.reset();                     
                        infa.extensionInitializer.initialized = true;                          
                        var template = infa.Eic.extensionView.getTemplate();
                        infa.Eic.extensionView.createContainerUI(template);  
                        if(tableauObject && tableauObject.show){
                            setTimeout(function(){
                                infa.Eic.extensionView.showExtensionView(template);
                            },300);
                        }            
                    }
                })
        },

        initializeEICConfiguration : function(parameters){
            var deferred = $.Deferred();
            
            if(parameters){
                for(key in parameters){
                    infa.extension.eicConfiguration.setParameter(key, parameters[key]);
                }
                deferred.resolve();                
            }else{
                chrome.storage.sync.get(["user", "password", "namespace", "tableauObject", "eicUrl"], function (result) {
            
                    infa.extension.eicConfiguration.setParameter("user", result.user);
                    infa.extension.eicConfiguration.setParameter("password", result.password);
                    infa.extension.eicConfiguration.setParameter("URL", result.eicUrl);
                    infa.extension.eicConfiguration.setParameter("namespace", result.namespace);
                    infa.extension.eicConfiguration.setParameter("tableauObject", result.tableauObject);
                    
                    deferred.resolve();
        })
    }
        return deferred.promise();
        }
    },{})


  