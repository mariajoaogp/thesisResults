infaw.ldm.threeSixty.abstractPanel.extend('infaw.ldm.threeSixty.descriptionPanel', {}, {

    setTitle: function (cntr) {
        cntr.append("Description");
    },

    beforeRender: function () {
        this._allDesc = null;
        this._rftEditor = null;
        this._prevContent = null;

        var self = this;
        return this.getObjectInfo().getAllDescription().done(function (allDesc) {
            if (allDesc[infaw.ldm.ThreeSixtyObject.DESC_TYPE.ENRICHED]) {
                self._editable = true;
            }
            self._allDesc = allDesc;
        });
    },

    isEditable: function () {
        return this._editable;
    },

    _createRTFContent: function (descCntr, propObj, value) {
        var rtfCntr = $("<div></div>")
            .addClass("infaRichTextDesc")
            .appendTo(descCntr);

        rtfCntr.RtfEditor({
            readOnly: true,
            disableResizeEditor: false,
            content: propObj.getDisplayValue(value)
        });
        this._rftEditor.push($.getWidget(rtfCntr, "RtfEditor"));
    },

    setPanelContent: function (panelCntr) {
        var allDesc = this._allDesc,
            showDesc = true,
            descCntr = $("<div></div>").addClass("descPanelCntr").appendTo(panelCntr);

        if (!$.isEmptyObject(allDesc)) {
            if (this._editable) {
                this._rftEditor = [];
                var enrichedDesc = allDesc[infaw.ldm.ThreeSixtyObject.DESC_TYPE.ENRICHED];
                if (enrichedDesc && enrichedDesc.value) {
                    var propObj = enrichedDesc.value;
                    if (propObj.value.length > 0) {
                        for (var i = 0; i < propObj.value.length; i++) {
                            var value = propObj.value[i];
                            this._createRTFContent(descCntr, propObj, value);
                        }
                    } else {
                        this._createRTFContent(descCntr, propObj);
                    }
                }
                showDesc = false;
            }

            if (showDesc && allDesc[infaw.ldm.ThreeSixtyObject.DESC_TYPE.ASSOCIATED_BUSINESS]) {
                var businessDesc = allDesc[infaw.ldm.ThreeSixtyObject.DESC_TYPE.ASSOCIATED_BUSINESS];
                if (businessDesc.value.length > 0) {
                    descCntr.append(businessDesc.value);
                    showDesc = false;
                }
            }

            if (showDesc && allDesc[infaw.ldm.ThreeSixtyObject.DESC_TYPE.SOURCE]) {
                var sysDesc = allDesc[infaw.ldm.ThreeSixtyObject.DESC_TYPE.SOURCE];
                if (sysDesc.value.length > 0) {
                    descCntr.append(sysDesc.value);
                    showDesc = false;
                }
            }
        }

        //If no description is available.
        if (showDesc) {
            this.hide();
        }
    },

    toggleEditState: function (action, success) {
        if (this.isEditable()) {
            this._super();
            if (action == "submit" && success) {
                this._rftEditor[0].setValue(this._rftEditor[0].getValue());
            }
            this._rftEditor[0].setReadOnly(this.isReadOnly());
        }
    },

    onSubmit: function (desc) {
        var enrichedDesc = this._allDesc[infaw.ldm.ThreeSixtyObject.DESC_TYPE.ENRICHED],
            descObj = enrichedDesc.value,
            newFacts = [];

        if(descObj.value.length > 0) {
            var deleteFacts = [];
            $.each(descObj.value, function(index, value){
                deleteFacts.push({
                    attrUuid: descObj.fact,
                    value: descObj.value[0]
                });
            });
        }
        $.each(this._rftEditor, function(i, editor){
            newFacts.push({
                attrUuid: descObj.fact,
                value: editor.getValue()
            });
        });

        var  query = {
            providerId: "enrichment",
            updates: [{
                deleteFacts : deleteFacts,
                newFacts: newFacts,
                id: this.getObjectInfo().getId()
            }]
        };
        return $.blockPostJSON('/web.ldm.enrichment.access', $.toJSON(query), null, -1);
    }

});