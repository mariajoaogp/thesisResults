$.Class("infa.Eic.utils",{
    init : function(){},
    SEARCH_HOME_PANEL:"search-home",
    SEARCH_RESULT_PANEL:"search-result",
    OBJECT_PANEL:"object-view",
    CONFIG_PANEL:"config-view",
    isOpenableClassType : function(type){
        return ["com.infa.ldm.relational.Table",
                "com.infa.ldm.tableau.Worksheet",
                "com.infa.ldm.tableau.Workbook",
                "eicterm",
                'com.infa.ldm.bg.BGTerm',
                'com.infa.ldm.axon.AxonGlossary',
                'com.infa.ldm.relational.View',
                'com.infa.ldm.bg.BGCategory'
                ].indexOf(type) >= 0 ? true : false;
    },
    openEicLink : function(id, view, type){
        if(!view)
            view = "ldm.ThreeSixtyView";
			/*
				EBF-17962
				Date-5 June 2020
			*/
            var url = EIC_CONFIGURATION.getUrl() + "/main/ldmObjectView/('$obj':'"+ RISON.urlencode(id) + "','$type':" + type + ",'$where':" + view + ")?client=extension";
            chrome.tabs.create({ url }, tab => {
                chrome.webRequest.onBeforeSendHeaders.addListener(function (details) {
                    details.requestHeaders.push({"name":"infaToken", "value":localStorage.getItem("infaToken")});
                    return {
                      requestHeaders: details.requestHeaders
                    };
                  },
                    { urls: ["<all_urls>"],
                      tabId: tab.id
                    },
                    ["blocking", "requestHeaders"]
                  );
            })
    },
    getNoPermissionTemplate :function(elem){
        var noPermHtml = $("<div class='no-permission'>")
        noPermHtml.html("Make sure that the asset exists in the catalog and you have sufficient permissions to view the asset.");
        noPermHtml.appendTo(elem);
        return noPermHtml;
    },
    getResourceUrls : function(config){
        var deferred = $.Deferred();
                var promise = $.blockGetJson("/web.ldm.getResources");

                promise.done(function(data) {
                    var tableauNames = [],
                        deferreds = [];

                    data = JSON.parse(data);
                    data.forEach(function(d) {
                        if (d.resourceTypeName == config.resourceType) {
                            tableauNames.push(d.resourceName)
                        }
                    })

                    if (tableauNames.length > 0) {
                        tableauNames.forEach(function(tn) {
                            deferreds.push(
                                $.blockGetJson("/web.ldm.getResources?tableauName=" + tn)                                
                            )
                        })
                    }

                    $.when.apply($, deferreds).then(function() {
                        var urls = [];
						for(var i = 0; i< arguments.length; i++){
								var data = JSON.parse(arguments[i][0]);
								var arr = data.scannerConfigurations[0].configOptions;
								for (var j = 0; j < arr.length; j++) {
									if (arr[j].optionId = "server") {
										urls.push(arr[j].optionValues[0]);
										break;
									}
								}	
						}

                        deferred.resolve(urls);
                    });
                })
        return deferred.promise();
    },

    getEICObject : function(tabObject) {
        var deferred = $.Deferred();
        var url = "&q=*&related=true&fq=-core.allclassTypes:core.Classifier&offset=0",
            query = "&fq=(com.infa.ldm.tableau.UIId:\""+encodeURIComponent(tabObject)+"\""+"%20OR%20"+"com.infa.ldm.ootb.enrichments.URL:\"" + encodeURIComponent(tabObject) + "\")" + url;
        if(tabObject == ""){
            deferred.resolve({})
        }
        $.blockGetJsonToBackground("/extension.eic.search?" + query , {},function(data)  { 
            deferred.resolve(data);
        },function(){
            deferred.reject()
        });               
       
        return deferred.promise();
    },

    checkForEICObject : function(tabObject) {
		var deferred = $.Deferred();
        // var url = "&q=*&related=true&fq=core.resourceType:%22Tableau%20Server%22&fq=-core.allclassTypes:core.Classifier&offset=0",
        //     query = "&fq=com.infa.ldm.tableau.UIId:\"" + encodeURIComponent(tabObject) + "\"" + url;
           var tabObject = encodeURIComponent(tabObject);
            $.blockGetJsonToBackground("/extension.eic.sessionLessSearch?tabObject=" + tabObject, {} ,function(exists) {                
            if(exists){
                deferred.resolve(exists);
            }else{
                deferred.resolve();
            }
        });

        return deferred.promise();
    },


    getPermission : function(tableauObject) {
        var deferred = $.Deferred();
           infa.Eic.utils.checkForEICObject(tableauObject).done(function(exists){
                deferred.resolve(exists);
            })
        return deferred.promise();
	},

    checkIfBGClassifier : function(id){
        	var isBgclassifier,isAxonclassifier;
        	isBgclassifier= (id.search("/Term/")!==-1)?id.search("/Term/"):id.search("/Category/");
        	isAxonclassifier= id.search("/AxonGlossary/");
    		if(isBgclassifier!==-1){
               return true;
    		}
    		else if(isAxonclassifier!==-1){
    			return true;
    		}
    		else{
    			return false;
    		}
        },

    searchWithCustomisedObjectQuery : function(ids) {
        var query = '/extension.eic.360.fetch?',
        url = "",
        defered = $.Deferred(),
        linksList = [];
        if( ids.length == 0 ){
            defered.resolve([]);
        }else{
            for (var i = 0; i < ids.length; i++) {
                if(i==ids.length-1){
                    url= url+ encodeURIComponent(ids[i])+"&";
                }else{
                    url= url+ "&id="+encodeURIComponent(ids[i]) + "&id=";
                }
            };
            url += 'direction=OUT&relationships=com.infa.ldm.bg.bgClassifierKind&relationships=com.infa.ldm.axon.axonClassifierKind';
            query += url;
            $.blockGetJson(query).then(function(res) {
               defered.resolve(res);
            });
        }
        return defered.promise();
    },

    getClassifierRelationships : function(ids) {
        var query = '/web.ldm.360.fetch?',
			url = "",
			defered = $.Deferred(),
			linksList = [];
		if (ids.length == 0) {
			return defered.resolve([]);
		} else {
			for (var i = 0; i < ids.length; i++) {
				if (i == ids.length - 1) {
					url = url + RISON.urlencode(ids[i]) + "&";
				} else {
					url = url + "&id=" + RISON.urlencode(ids[i]) + "&id=";
				}
			}
			url += 'direction=OUT&relationships=com.infa.ldm.bg.bgClassifierKind&relationships=com.infa.ldm.axon.axonClassifierKind';
			url += "&pageSize=" + ids.length;
			query += url;
			$.blockGetJSON(query).then(function (res) {
				defered.resolve(res);
			});
		}
		return defered.promise();
    },

    getFact : function(id, factName){
        var deferred = $.Deferred();
        var url = "&q="+ RISON.urlencode(id) + "&qf=id&fl=id&fl="+ factName;
            $.blockGetJson("/extension.eic.search?" + url , {}).done(function(data) {                
            deferred.resolve(data);
        }).fail(function(){
            deferred.reject();
        });

        return deferred.promise();
    },

    getObjectIcon : function(classType,resourceType){
        var name = "",
        imagePath = 'default',
        def = $.Deferred();
    if(infa.ldm.Utils.isReport(classType)) {
        name = "Report";
    } else if(infa.ldm.Utils.isBusinessTerm(classType)) {
        name = "BGTerm";
    } else if(classType=="core.Resource" && resourceType=="Axon"){
        name= "AxonResource";
    }
    if(name != ""){
        def.resolve( infa.ldm.Utils.SCANNER_IMAGE_LOCATION + imagePath +  "/" + name+".svg");
    }else{
        infa.eic.AppConfigData.instance().getObjectDetails(classType).done(function(obj){
            if(obj) {
                name = obj.name;
                var package = obj.packageName;

                if(package) {
                    name = obj.name.replace(package+".", "");
                    imagePath = package.replace(/\./g,"_");
                }
                def.resolve(infa.ldm.Utils.SCANNER_IMAGE_LOCATION+imagePath+"/"+name+".svg");
            }
            def.resolve(imagePath +=  "/" + "Generic.svg");
        });  
    }
    return def;
    },
    isUrlValid:function(eicUrl) {
        var r = new RegExp(/(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/);
        return r.test(eicUrl);
        },
        
        isValidUrl :function(eicUrl){
          var deferred = $.Deferred(),
              arr = eicUrl.split("/");
          
          if(!infa.Eic.utils.isUrlValid(eicUrl) || (arr.length > 4 && arr[4] !== "")){
            deferred.reject();
          }
          else
          {
          $.blockGetJsonToBackground(eicUrl + "/extension.eic.pingService",
            function(){
                deferred.resolve();                        
            },
            function(XMLHttpRequest, textStatus, errorThrown) {
                deferred.reject();                              
            })
          }
          return deferred.promise();
        }
},{})

