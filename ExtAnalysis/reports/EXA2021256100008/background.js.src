var cacheEICConfiguration = function (request) {
  chrome.storage.sync.set(request);
}
var openGeneric = function () {
  chrome.tabs.query({
    currentWindow: true,
    active: true
  }, function (tabs) {
    chrome.tabs.sendMessage(tabs[0].id, {
      method: "openGeneric"
    }, function (response) { });
  });

}
browserAction = function (a) {

}

chrome.browserAction.onClicked.addListener(function (e) {
  openGeneric()
}),
  chrome.tabs.onUpdated.addListener(function (tabId, changeInfo, tab) {
    if (changeInfo.url) {
      chrome.tabs.query({
        currentWindow: true,
        active: true
      }, function (tabs) {
        if(tabs.length > 0){
          chrome.tabs.sendMessage(tabs[0].id, {
            method: "URLChange"
          }, function (response) { });
        }
      });

    }
  });

chrome.runtime.onMessage.addListener(function (request, sender, callback) {
  var d = sender.tab && sender.tab.id;
  switch (request.action) {
    case "openGeneric":
      request.loaded ? request.active ? PageRuler.disable(d) : PageRuler.enable(d) : openGeneric(request);
      break;
  }
  if (request.action == "xhttp") {
    //console.log("%ctURL" + JSON.stringify(request) +"\n",'background: #222; color: #bada55')
    //var tURL = request;
    $.ajax({
      type: request.method,
      url: request.url,
      data: request.data,
      headers: { "infaToken": localStorage.getItem("infaToken") },
      contentType: "application/json",
      success: function (responseText) {
        //console.log("%ctURL" +JSON.stringify(tURL.data) +"\n"+ JSON.stringify(responseText) ,'background: pink; color: #002')
        callback(responseText);
      },
      error: function (XMLHttpRequest, textStatus, errorThrown) {
        //if required, do some error handling
        callback("error");
      }
    });

    return true; // prevents the callback from being called too early on return
  } else if (request.action == "cacheEICConfiguration") {
    cacheEICConfiguration(request);
  } else if (request.action == "openGeneric") {
    openGeneric(request);
  } else if (request.action == "https") {
    $.ajax(

      $.extend({}, request.data, {
        url: request.url,
        success: function (res) {
          callback(res)
        },
        error: function () {
          callback("error")
        }
      }));
  }
});