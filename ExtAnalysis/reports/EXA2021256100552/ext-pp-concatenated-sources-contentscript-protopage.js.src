// Copyright 2021 Protopage Ltd.  All rights reserved.

let e = 1.32;

let t = true;

let o = false;

let n = false;

let i = "https://chrome.google.com/webstore/detail/protopage-start-page/hjgoljmnaepbdpeadpciimeapgjadenc/reviews";

function r(e) {
    if (typeof e == "string") e = document.getElementById(e);
    if (!e) return;
    while (e.childNodes.length > 0) e.removeChild(e.childNodes[0]);
}

function d(e, o) {
    if (e == null || o == null) return false;
    return e.lastIndexOf(o) === e.length - o.length;
}

function c(e, o) {
    e = e.substring(e.indexOf("?") + 1);
    let n = e.split("&");
    for (let e in n) {
        let t = n[e].split("=");
        if (t[0] == o) {
            return decodeURIComponent(t[1]);
        }
    }
    return undefined;
}

function l(e) {
    let o = e;
    if (e.lastIndexOf("/") > 10) o = o.substring(e.lastIndexOf("/") + 1);
    if (o.length < 2) o = e.substring(e.indexOf("//") + "//".length);
    return o;
}

function J() {
    if (o) return "edge";
    if (t) return "chrome";
    if (n) return "firefox";
    return "browserUnknown";
}

if (document.location.href.toLowerCase().indexOf("protopage.com") !== -1) {
    if (document.getElementById("protopageExtensionInfo")) {
        r("protopageExtensionInfo");
        document.getElementById("protopageExtensionInfo").appendChild(document.createTextNode(J()));
        if (document.getElementById("protopageExtensionVersionInfo")) {
            r("protopageExtensionVersionInfo");
            document.getElementById("protopageExtensionVersionInfo").appendChild(document.createTextNode("" + 2));
        }
        window.addEventListener("message", (e => {
            if (e["source"] !== window) return;
            if (e["data"]["type"] && e["data"]["type"] === "invokeExtension") {
                let o = JSON.parse(e["data"]["text"]);
                chrome.runtime.sendMessage({
                    type: "invokeExtension",
                    data: e["data"]["text"]
                }, (e => {
                    if (e) {
                        e["rpcId"] = o["rpcId"];
                        window["postMessage"]({
                            type: "invokeExtensionResponse",
                            text: JSON.stringify(e)
                        }, window["location"]["origin"]);
                    }
                }));
            }
            if (e["data"]["type"] && e["data"]["type"] === "invokeProtopageResponse") {
                let o = JSON.parse(e["data"]["text"]);
                if (o["rpcId"] && O[o["rpcId"]]) O[o["rpcId"]](o);
            }
        }), false);
        chrome.runtime.onMessage.addListener(((e, o, n) => {
            if (e["type"] === "invokeProtopage") {
                let o = e["req"];
                S(o, (o => {
                    chrome.runtime.sendMessage({
                        type: "invokeProtopageResponse",
                        resp: o,
                        invokeProtopageFromExtensionRpcId: e["invokeProtopageFromExtensionRpcId"]
                    });
                }));
            }
            n();
        }));
    }
}

var N = 0;

var O = {};

function S(e, o) {
    N++;
    if (o) O[N] = o;
    e["rpcId"] = N;
    window["postMessage"]({
        type: "invokeProtopage",
        text: JSON.stringify(e)
    }, window["location"]["origin"]);
}