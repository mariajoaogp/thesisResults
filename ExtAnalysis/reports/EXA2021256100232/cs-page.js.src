(function(){

  var relCan;


  var init = function(){
    initMessaging();
    relCan = getRelCan();
    chrome.runtime.sendMessage({
      cmd: 'settings.get'
    }, function(settings){
      if (!settings.highlightNoFollow) {
        return;
      }
      else processLinks();
    });
  };


  var initMessaging = function(){
    chrome.runtime.onMessage.addListener(
      function(request, sender, sendResponse) {
        var cmd = request.cmd;
        var data = request.data;
        if (cmd === 'getRelCan') {
          sendResponse(relCan);
        }
      });
  };



  var getRelCan = function(){
    var nodes = document.querySelectorAll('link[rel=canonical i]');
    if (!nodes.length) return [];
    var res = [];
    for (var i = 0, len = nodes.length; i < len; i++) {
      var node = nodes[i];
      var href = node.getAttribute('href');
      var url = qualifyURL(href);
      res.push({url: url, src: 'HTML Rel-Canonical'});
    }
    return res;
  };


  var qualifyURL = function(url) {
    var a = document.createElement('a');
    a.href = url;
    return a.href;
  };


  var processLinks = function(){
    chrome.runtime.sendMessage({
      cmd: 'page_data.get'
    }, function(data){
      if (!data) data = [];
      var meta = getMetaRobots();
      data.concat(meta);
      var robotsNofollow = false;
      data.map(function(robot){
        if (robot.nofollow) robotsNofollow = true;
      });
      var selector = 'a[rel~="nofollow"]';
      if (robotsNofollow) selector = 'a[href]';
      var links = document.querySelectorAll(selector);
      for (var i = 0, len = links.length; i < len; i++) {
        var link = links[i];
        link.style.border = 'dotted 1px firebrick';
      }
    });
  };


  var getMetaRobots = function(){
    var nodes = document.querySelectorAll("meta[name=robots i]");
    if (!nodes.length) return;
    var values = [];
    for (var i = 0, len = nodes.length; i < len; i++) {
      var node = nodes[i];
      var content = node.getAttribute('content');
      var noindex = !!content.match(/noindex/i);
      var nofollow = !!content.match(/nofollow/i);
      if (!noindex && !nofollow) continue;
      values.push({noindex: noindex, nofollow: nofollow});
    }
    var res = {src: 'html'};
    values.map(function(item){
      if (item.noindex) res.noindex = true;
      if (item.nofollow) res.nofollow = true;
    });
    return res;
  };


  return {
    init: init
  };

})().init();
