const SettingsGACategory="Settings";class MainComponent extends React.Component{constructor(e){super(e),this.serpsToOmitFromSettings=["Gmail"],this.filterSerpsFromList=this.filterSerpsFromList.bind(this),document.title="WOT - "+webextApi.i18n.getMessage("settings"),this.state={openShields:!!this.props.getParams.serpid}}async componentDidMount(){try{const e=this.props.user;this.setState({isPremiumUser:e.isPremiumUser})}catch(e){this.setState({isPremiumUser:!1})}}onLogoClick(){this.sendGA("WOT Logo"),webextApi.runtime.sendMessage({name:OPEN_TAB_MESSAGE,url:MAIN_PAGE_URL+SETTINGS_REDIRECT_PARAMETERS})}sendGA(e){GA("Settings",e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"")}openShields(){this.setState({openShields:!this.state.openShields})}_turnOffTrackerBlocker(){this.sendGA("all trackers","allow"),this.props.store.dispatch(toggleBlockAllTrackers(!1))}_turnOnTrackerBlocker(){this.sendGA("all trackers","block"),this.props.store.dispatch(toggleBlockAllTrackers(!0))}_turnOffPhishing(){this.sendGA("gmail protection","off"),this.props.store.dispatch(turnOffPhishing())}_turnOnPhishing(){this.sendGA("gmail protection","on"),this.props.store.dispatch(turnOnPhishing())}filterSerpsFromList(e){return!this.serpsToOmitFromSettings.includes(e.name)}render(){var e=this.props;const t=e.dispatch,i=e.settings,s=e.whitelist,a=e.phishingWhitelist,n=e.serps,o=e.getParams,c=e.trackerBlockerData,r=this.state.isPremiumUser,l=[],p="safari"===browserName,m=[{action:setWarningsLevel,title:webextApi.i18n.getMessage("all"),arguments:WARNINGS_LEVEL_HIGH,params:["Settings","Warnings","All"]},{action:setWarningsLevel,title:webextApi.i18n.getMessage("severeOnly"),arguments:WARNINGS_LEVEL_NORMAL,params:["Settings","Warnings","Severe Only"]},{action:setWarningsLevel,title:webextApi.i18n.getMessage("off"),arguments:WARNINGS_LEVEL_OFF,params:["Settings","Warnings","Off"]}];let g="options__container_item";!i.protection&&(g+=" options__container_item_not-protection_other"),window.eventSended||(this.sendGA("Open"),window.eventSended=!0);const d={id:"all",host:"all",level:i.shields.all,shieldActions:[{action:setShieldsLevel,title:webextApi.i18n.getMessage("always"),arguments:SHIELDS_LEVEL_HIGH,params:["Settings","Donuts","All"]},{action:setShieldsLevel,title:webextApi.i18n.getMessage("poorOnly"),arguments:SHIELDS_LEVEL_NORMAL,params:["Settings","Donuts","Poor Only"]},{action:setShieldsLevel,title:webextApi.i18n.getMessage("off"),arguments:SHIELDS_LEVEL_OFF,params:["Settings","Donuts","Off"]}]};return n.filter(this.filterSerpsFromList).map(e=>{let t=i.shields.all;_.forEach(i.shields,(i,s)=>{new RegExp(e.domain).test(s)&&(t=i)}),l.push({id:e.id,host:e.name,level:t,shieldActions:[{action:setShieldsLevel,title:webextApi.i18n.getMessage("always"),arguments:SHIELDS_LEVEL_HIGH,params:["Settings","Donuts","All"]},{action:setShieldsLevel,title:webextApi.i18n.getMessage("poorOnly"),arguments:SHIELDS_LEVEL_NORMAL,params:["Settings","Donuts","Poor Only"]},{action:setShieldsLevel,title:webextApi.i18n.getMessage("off"),arguments:SHIELDS_LEVEL_OFF,params:["Settings","Donuts","Off"]}]})}),React.createElement("div",{className:"options"},React.createElement("div",{className:"options__header"},React.createElement("div",{className:"options__header__logo",onClick:this.onLogoClick.bind(this)})),React.createElement("div",{className:"options__body"},React.createElement("div",{className:"options__container"},React.createElement("div",{className:g+" radio_button_options"},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage("warnings"),text:webextApi.i18n.getMessage(i.warnings)}),React.createElement(RadioButtonContainer,{dispatch:t,settings:i,type:"warnings",actions:m})),React.createElement("div",{className:g+" radio_button_options"},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage("donuts"),text:webextApi.i18n.getMessage(d.level),clickAction:this.openShields.bind(this),shieldState:this.state.openShields}),React.createElement(RadioButtonContainer,{dispatch:t,settings:i,type:"shields",id:d.id,actions:d.shieldActions})),React.createElement("div",{className:"options__container__donuts"+(this.state.openShields?" options__container__donuts_show":"")},l.map(e=>React.createElement("div",{className:g+(e.host&&"all"!==e.host?" options__container_item_site":"")+(o.serpid&&e.id==o.serpid?" highlight-donut":"")},React.createElement(DescriptionOption,{title:"Â "+e.host,text:""}),React.createElement(RadioButtonContainer,{dispatch:t,settings:i,type:"shields",id:e.id,actions:e.shieldActions,shieldState:this.state.openShields,host:e.host||""})))),React.createElement("div",{className:g},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage("wotAssistant"),text:webextApi.i18n.getMessage(i.assistant?"wotAssistantON":"wotAssistantOFF")}),r?React.createElement(CheckboxOption,{protection:i.protection&&r,check:!!i.assistant&&r,dispatch:t,actions:[turnOffWotAssistant,turnOnWotAssistant],type:"Assistant"}):React.createElement("div",{className:"options__header__premium"},React.createElement(GetPremium,{store:this.props.store,name:"Hook_Setting",text:"upgrade"}))),React.createElement("div",{className:g},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage("adultProtection"),text:webextApi.i18n.getMessage("adultProtectionText")}),r?React.createElement("div",null):React.createElement("div",{className:"options__header__premium"},React.createElement(GetPremium,{store:this.props.store,name:"Hook_Setting",text:"upgrade"}))),React.createElement("div",{className:g+" subItem"},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage("adultContent"),text:webextApi.i18n.getMessage("parentalControlON")}),r?React.createElement(CheckboxOption,{protection:i.protection,check:!!i.parental,dispatch:t,actions:[turnOffParentalControl,turnOnParentalControl],type:"Parental Control"}):React.createElement("div",{className:"star_to_button"},React.createElement("div",{className:"orange_star"}),React.createElement("div",{className:"invisible_button"},React.createElement(GetPremium,{store:this.props.store,name:"Hook_Setting",text:"upgrade"})))),React.createElement("div",{className:g+" subItem"},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage("gamblingSites"),text:webextApi.i18n.getMessage("gamblingSitesText")}),r?React.createElement(CheckboxOption,{protection:i.protection,check:!!i.gambling,dispatch:t,actions:[turnOffGamblingControl,turnOnGamblingControl],type:"Parental Control"}):React.createElement("div",{className:"star_to_button"},React.createElement("div",{className:"orange_star"}),React.createElement("div",{className:"invisible_button"},React.createElement(GetPremium,{store:this.props.store,name:"Hook_Setting",text:"upgrade"})))),React.createElement("div",{className:g+" subItem"},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage("18Icon"),text:webextApi.i18n.getMessage(i.parentalExtraIcon?"18IconON":"18IconOFF")}),r?React.createElement(CheckboxOption,{protection:i.protection,check:!!i.parentalExtraIcon,dispatch:t,actions:[turnOffParentalControlExtraIcon,turnOnParentalControlExtraIcon],type:"18+ icon"}):React.createElement("div",{className:"star_to_button"},React.createElement("div",{className:"orange_star"}),React.createElement("div",{className:"invisible_button"},React.createElement(GetPremium,{store:this.props.store,name:"Hook_Setting",text:"upgrade"})))),React.createElement("div",{className:g},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage("gmailProtectionTitle"),text:webextApi.i18n.getMessage("gmailProtectionDescription")}),r?React.createElement("div",null):React.createElement("div",{className:"options__header__premium"},React.createElement(GetPremium,{store:this.props.store,name:"Hook_Setting",text:"upgrade"}))),React.createElement("div",{className:g+" subItem"},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage("gmailProtectionSubTitle"),text:webextApi.i18n.getMessage("gmailProtectionSubDescription")}),r?React.createElement(CheckboxOption,{protection:i.protection,check:!!i.phishing,dispatch:t,actions:[this._turnOffPhishing.bind(this),this._turnOnPhishing.bind(this)],type:"blocks popup"}):React.createElement("div",{className:"star_to_button"},React.createElement("div",{className:"orange_star"}),React.createElement("div",{className:"invisible_button"},React.createElement(GetPremium,{store:this.props.store,category:"Settings",name:"Gmail-Protection",label:"premium",text:"upgrade"})))),r&&React.createElement("div",{className:g+" subItem title-only"},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage("gmailProtectionWLTitle"),text:""})),r&&React.createElement(WhiteList,{isPhishingWL:!0,whitelist:a,dispatch:t,settings:i}),React.createElement("div",{className:g},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage("PopupBlockerShield"),text:webextApi.i18n.getMessage("PopupBlockerText")}),r?React.createElement("div",null):React.createElement("div",{className:"options__header__premium"},React.createElement(GetPremium,{store:this.props.store,name:"Hook_Setting",text:"upgrade"}))),React.createElement("div",{className:g+" subItem"},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage("BlocksPopup"),text:webextApi.i18n.getMessage("BlocksPopupText")}),r?React.createElement(CheckboxOption,{protection:i.protection,check:!!i.blockPopUp,dispatch:t,actions:[turnOffPopupBlock,turnOnPopupBlock],type:"blocks popup"}):React.createElement("div",{className:"star_to_button"},React.createElement("div",{className:"orange_star"}),React.createElement("div",{className:"invisible_button"},React.createElement(GetPremium,{store:this.props.store,name:"Hook_Setting",text:"upgrade"})))),React.createElement("div",{className:g+" subItem"},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage("PopupNotification"),text:webextApi.i18n.getMessage("PopupNotificationText")}),r?React.createElement(CheckboxOption,{protection:i.protection,check:!!i.blockPopUpNotification,dispatch:t,actions:[turnOffPopupBlockNotification,turnOnPopupBlockNotification],type:"blocks popup"}):React.createElement("div",{className:"star_to_button"},React.createElement("div",{className:"orange_star"}),React.createElement("div",{className:"invisible_button"},React.createElement(GetPremium,{store:this.props.store,name:"Hook_Setting",text:"upgrade"})))),!p&&React.createElement("div",{className:g},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage("trackerBlocker"),text:webextApi.i18n.getMessage("trackerBlockerDescription")}),r?React.createElement(CheckboxOption,{protection:i.protection&&r,check:!!c.allBlocked&&r,dispatch:t,actions:[this._turnOffTrackerBlocker.bind(this),this._turnOnTrackerBlocker.bind(this)],type:"trackerBlocker"}):React.createElement("div",{className:"options__header__premium"},React.createElement(GetPremium,{store:this.props.store,name:"Hook_Setting",text:"upgrade"}))),React.createElement("div",{className:i.protection?"options__container_item":"options__container_item options__container_item_not-protection"},React.createElement(DescriptionOption,{title:webextApi.i18n.getMessage(i.protection?"rtProtection":"rtProtectionRecommended"),text:webextApi.i18n.getMessage(i.protection?"rtON":"rtOFF"),policy:i.protection}),React.createElement(CheckboxOption,{protection:!0,check:!!i.protection,dispatch:t,actions:[turnOffProtection,turnOnProtection],type:"RTP"})),React.createElement(WhiteList,{whitelist:s,dispatch:t,settings:i})),React.createElement("div",{className:"options__ads"},!p&&React.createElement(PremiumStatus,{store:this.props.store}),React.createElement(ContactUs,null))))}}function mapStateToPros(e){const t={};return window.location.search.substr(1).split("&").forEach(e=>{t[e.split("=")[0]]=e.split("=")[1]}),_.merge({},e,{getParams:t})}MainComponent.propTypes={},MainComponent=ReactRedux.connect(mapStateToPros)(MainComponent);