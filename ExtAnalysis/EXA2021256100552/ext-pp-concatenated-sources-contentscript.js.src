// Copyright 2021 Protopage Ltd.  All rights reserved.

function r(e) {
    if (typeof e == "string") e = document.getElementById(e);
    if (!e) return;
    while (e.childNodes.length > 0) e.removeChild(e.childNodes[0]);
}

function d(e, t) {
    if (e == null || t == null) return false;
    return e.lastIndexOf(t) === e.length - t.length;
}

function c(e, t) {
    e = e.substring(e.indexOf("?") + 1);
    let n = e.split("&");
    for (let e in n) {
        let l = n[e].split("=");
        if (l[0] == t) {
            return decodeURIComponent(l[1]);
        }
    }
    return undefined;
}

function l(e) {
    let t = e;
    if (e.lastIndexOf("/") > 10) t = t.substring(e.lastIndexOf("/") + 1);
    if (t.length < 2) t = e.substring(e.indexOf("//") + "//".length);
    return t;
}

if (window === top) {
    if (H()) {
        chrome.runtime.sendMessage({
            type: "currentPageIsFeed",
            href: document.location.href
        }, (e => {}));
    } else {
        let e = U();
        chrome.runtime.sendMessage({
            type: "feeds",
            u: e,
            href: document.location.href
        }, (e => {}));
    }
}

function H() {
    let e = document.evaluate('//*[local-name()="rss" or local-name()="feed" or local-name()="channel"]', document, null, 0, null);
    return !!e.iterateNext();
}

function U() {
    let e = document.evaluate('//link[@rel="alternate"][contains(@type, "rss") or contains(@type, "atom") or contains(@type, "rdf")]', document, null, 0, null);
    let t = [];
    let n;
    let o = {};
    while (n = e.iterateNext()) {
        let e = n["title"];
        if (d(e, " - Atom")) e = e.substring(0, e.length - " - Atom".length);
        if (d(e, " - RSS")) e = e.substring(0, e.length - " - RSS".length);
        if (d(n["href"], "?alt=rss")) {
            if (o[n["href"].substring(0, n["href"].length - "?alt=rss".length)]) continue;
        }
        t.push({
            href: n["href"],
            title: e,
            m: document.location.href
        });
        o[n["href"]] = true;
    }
    let r = (n, o) => {
        e = document.evaluate('//a[contains(@href, "' + n + '")]', document, null, 0, null);
        let r;
        while (r = e.iterateNext()) {
            try {
                let e = r["href"];
                let n = c(e, o);
                let u = l(n);
                t.push({
                    href: n,
                    title: u,
                    m: document.location.href
                });
            } catch (e) {}
        }
    };
    if (t.length === 0) {
        r("fusion.google.com/add", "feedurl");
    }
    if (t.length === 0) {
        r("add.my.yahoo.com/rss", "url");
    }
    e = document.evaluate('//a[contains(@href, "feed:http")]', document, null, 0, null);
    while (n = e.iterateNext()) {
        let e = n["href"];
        if (e.indexOf("feed:") === 0) {
            e = e.substring("feed:".length);
            let n = l(e);
            t.push({
                href: e,
                title: n,
                m: document.location.href
            });
        }
    }
    return t;
}